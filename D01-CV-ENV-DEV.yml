services:
  vault:
    image: vault:1.13.3
    container_name: vault
    hostname: local.docker.vault
    restart: on-failure
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    command: vault server -config=/vault/config/vault.hcl
    volumes:
      - ./vault/data:/vault/data
      - ./vault/config:/vault/config
    networks:
      cv_network:
        ipv4_address: 172.0.0.10

  redis:
    image: redis:latest
    container_name: redis
    hostname: local.docker.redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    environment:
      REDIS_PASSWORD: $REDIS_PASSWORD
    networks:
      cv_network:
        ipv4_address: 172.0.0.11
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    hostname: local.docker.redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local.docker.redis:local.docker.redis:6379:0:$REDIS_PASSWORD
    ports:
      - "6380:8081"
    networks:
      cv_network:
        ipv4_address: 172.0.0.12

  mysql:
    image: mysql:8.0.41
    container_name: mysql
    hostname: local.docker.mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/data:/var/lib/mysql
    networks:
      cv_network:
        ipv4_address: 172.0.0.13
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    hostname: local.docker.zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      cv_network:
        ipv4_address: 172.0.0.14

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: local.docker.kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: local.docker.zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      cv_network:
        ipv4_address: 172.0.0.15

  service-registry:
    image: ghcr.io/creatorsventure/s01-service-registry:latest
    container_name: service-registry
    hostname: local.docker.service-registry
    restart: unless-stopped
    depends_on:
      - vault
      - redis
      - mysql
      - kafka
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: test
    volumes:
      - ./service-registry/config:/app/config
    networks:
      cv_network:
        ipv4_address: 172.0.0.16

  cloud-config:
    image: ghcr.io/creatorsventure/s02-cloud-config:latest
    container_name: cloud-config
    hostname: local.docker.cloud-config
    restart: unless-stopped
    depends_on:
      - service-registry
    ports:
      - "8081:8081"
    environment:
      SPRING_CLOUD_VAULT_URI: http://local.docker.vault:8200
      VAULT_TOKEN: $VAULT_TOKEN
      SPRING_PROFILES_ACTIVE: git,vault,test
    volumes:
      - ./cloud-config/config:/app/config
    networks:
      cv_network:
        ipv4_address: 172.0.0.17

  cloud-gateway:
    image: ghcr.io/creatorsventure/s03-cloud-gateway:latest
    container_name: cloud-gateway
    hostname: local.docker.cloud-gateway
    restart: unless-stopped
    depends_on:
      - service-registry
      - cloud-config
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: test
      CONFIG_SERVER_URL: configserver:http://local.docker.cloud-config:8081
    volumes:
      - ./cloud-gateway/config:/app/config
    networks:
      cv_network:
        ipv4_address: 172.0.0.18

networks:
  cv_network:
    name: cv_network
    ipam:
      driver: default
      config:
        - subnet: 172.0.0.0/24
